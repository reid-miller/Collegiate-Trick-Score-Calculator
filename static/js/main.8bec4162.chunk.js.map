{"version":3,"sources":["data.js","Trick.js","InputField.js","index.js"],"names":["trickList","Trick","score","name","this","props","greyOut","front","trick","reverse","lastTrick","includes","trickCode","wake","oneSki","scoreWake1Ski","scoreWake2Ski","score1Ski","score2Ski","disabled","onClick","React","Component","InputField","state","value","handleChange","bind","handleSubmit","event","setState","target","onSubmit","toUpperCase","trim","preventDefault","type","onChange","placeholder","Application","scrollToBottom","messagesEnd","scrollIntoView","behavior","tricks_done","tricks","setUp","message","visual_trick_list","start","ski","confirmAlert","title","buttons","label","alert","reset","charAt","i","length","j","trickWakeCode","reverseTrick","reverseTrickCode","push","substring","findTrick","position","lastTrickCode","result","startPosition","endPosition","end","toAdd","visual_list","amount","parseInt","arr","trickListText","split","elements","typeOfTrick","obj","indexOf","thing","className","class","switchSki","id","map","txt","style","float","clear","ref","el","rel","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8bec4162.chunk.js","sourcesContent":["const trickList= \"Sideslide - S 20* 40* % % % F F\\nToehold Sideslide - TS % 130* % % % F F\\n180° FB - B 30* 60* WB 50* 80* F B\\n180° BF - F 30* 60* WF 50* 80* B F\\n360° FF - O 40* 90* WO 110* 150* F F\\n360° BB - BB 40* 90* WBB 110* 150* B B\\n540° FB - 5B 50 110 W5B 310* 310* F B\\n540° BF - 5F 50 110 W5F 310* 310* B F\\n720° FF - 7F 60 130 W7F 800* 800* F F\\n720° BB - 7B 60 130 W7B 480* 480* B B\\n900° FB - % % % W9B 850* 850* F B\\n900° BF - % % % W9F 850* 850* B F\\n@\\nStepover 180° FB - LB 70* 110 WLB 110* 160 F B\\nStepover 180° BF - LF 70* 110 WLF 110* 160 B F\\nStepover 360° FF - % % % WLO 200* 260* F F\\nStepover 360° BB - % % % WLBB 200* 260* B B\\nStepover 540° FB - % % % WL5B 300* 420* F B\\nDouble Stepover 540° FB - % % % WL5LB % 500* F B\\nStepover 720° FF - % % % WL7F 700* 700* F F\\nStepover 900° FB - % % % WL9B 800* 800* F B\\nStepover 540° BF - % % % WL5F 300* 420* B F\\nDouble Stepover 540° BF - % % % WL5LF % 500* B F\\nStepover 720° BB - % % % WL7B 550* 550* B B\\nStepover 900° BF - % % % WL9F 800* 800* B F\\n@\\nToehold 180° FB - TB % 100* TWB % 150* F B\\nToehold 180° BF - TF % 100* TWF % 150* B F\\nToehold 360° FF - TO % 200* TWO % 300* F F\\nToehold 360° BB - TBB % 200* TWBB % 330* B B\\nToehold 540° FB - T5B % 350* TW5B % 500* F B\\nToehold 720° FF - T7F % 450 TW7F % 650* F F\\nToehold 540° BF - T5F % 350 TW5F % 500 B F\\nToehold 720° BB - % % % TW7B % 650 B B\\nToehold Stepover 180° FB - % % % TWLB % 320 F B\\nToehold Stepover 180° BF - % % % TWLF % 380 B F\\nToehold Stepover 360° FF - % % % TWLO % 480* F F\\nToehold Stepover 360° BB - % % % TWLBB % 480* B B\\nToehold Stepover 540° FB - % % % TWL5B % 600* F B\\nToehold Stepover 540° LBF - % % % TWL5F % 700 B F\\n@\\nFront Flip - % % % FFL 800 800 F F\\nBack Flip - % % % BFL 500* 500* F F\\nDouble Back Flip - % % % DBFL 1,000 1,000 F F\\nBack Flip 360˚ FF - % % % BFLO 800 800* F F\\nBack Flip 360˚ BB - % % % BFLBB 800 800* B B\\nBack Flip 180˚ FB - % % % BFLB 750* 750* F B\\nBack Flip Line Back - % % % BFLLB 800 800 F B\\nBack Flip 180˚ BF - % % % BFLF 550 550* B F\\nBack Flip 540˚ BF - % % % BFL5F 850 850* B F\\nBack Flip 540˚ FB - % % % BFL5B 900 900* F B\\nFront Flip 180˚ FB - % % % FFLB 850 850 F B\\nFront Flip 180˚ BF - % % % FFLF 850 850 B F\\nFront Flip 360˚ BB - % % % FFLBB 900 900 B B\\nFront Flip 540˚BF - % % % FFL5F % 950 B F\\nBack Flip Ski Line 360˚ BB - % % % BFLSLBB % 900 B B\\n@\\nSki Line 180° FB - % % % SLB % 350* F B\\nSki Line 180° BF - % % % SLF % 400* B F\\nSki Line 360° FF - % % % SLO % 400* F F\\nSki Line 360° BB - % % % SLBB % 450* B B\\nSki Line 540° FB - % % % SL5B % 550* F B\\nSki Line 540° BF - % % % SL5F % 550* B F\\nSki Line 720° BB - % % % SL7B % 750* B B\\nSki Line 720° FF - % % % SL7F % 800* F F\\nToe Stepover 720˚ FF - % % % TWL7F % 800 F F\\n\";\r\n\r\nexport default trickList;\r\n\r\n\r\n\r\n \r\n","import React from 'react';\r\n\r\nclass Trick extends React.Component {\r\n  render() {\r\n      var name = this.props.name;\r\n      var greyOut = false;\r\n      var score;\r\n      var front = this.props.front; //Will be sent back up as vakue it should be after button is pressed\r\n      var trick = this.props.trick;\r\n      var reverse = false;\r\n\r\n      if(this.props.lastTrick === trick) {\r\n        name = \"Reverse \" + name;\r\n        reverse = true;\r\n      }\r\n\r\n      if(name.includes(\"FF\") && !front) {\r\n        if(!front) {\r\n          greyOut = true;\r\n        }\r\n      } else if(name.includes(\"FB\")){\r\n        if(front) {\r\n          front = false;\r\n        } else {\r\n          greyOut = true;\r\n        }\r\n      } else if(name.includes(\"BF\")) {\r\n        if(front) {\r\n          greyOut = true;\r\n        } else {\r\n          front = true;\r\n        }\r\n      } else if(name.includes(\"BB\")) {\r\n        if(front) {\r\n          greyOut = true;\r\n        }\r\n      }\r\n\r\n      //If the trick does not need wake added to it ever then we do nothing\r\n      if(this.props.trickCode === \"%\" || this.props.trickCode === \"S\" || this.props.trickCode === \"TS\") {\r\n        // We do nothing\r\n      } \r\n      // Else it might need \"wake\" added to the name\r\n      else {\r\n        name = this.props.wake ? \"Wake \" + name : name; \r\n      }\r\n\r\n      if(this.props.wake) {\r\n        score = this.props.oneSki ? this.props.scoreWake1Ski : this.props.scoreWake2Ski;\r\n      } else {\r\n        score = this.props.oneSki ? this.props.score1Ski : this.props.score2Ski;\r\n      }\r\n\r\n      if(greyOut) {\r\n        return (\r\n          <button disabled> {name} </button>\r\n        );\r\n      } else {\r\n        return (\r\n          <button onClick={() => {this.props.onClick(score, front, trick, reverse)}}> {name} </button>\r\n        );\r\n      }\r\n    }\r\n}\r\n\r\nexport default Trick;","import React from 'react';\r\n\r\nclass InputField extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {value: ''};\r\n  \r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n  \r\n    handleChange(event) {\r\n      this.setState({value: event.target.value});\r\n    }\r\n  \r\n    handleSubmit(event) {\r\n      this.props.onSubmit(this.state.value.toUpperCase().trim());\r\n\r\n\r\n      event.preventDefault();\r\n      this.setState({value: \"\",})\r\n      //var scrollableTable = document.getElementById(\"trick-table\");\r\n      //scrollableTable.scrollTop = scrollableTable.scrollHeight;\r\n      //console.log(scrollableTable);\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label>\r\n            <input type=\"text\" value={this.state.value} onChange={this.handleChange} placeholder=\" Trick Code\" />\r\n          </label>\r\n          <input type=\"submit\" value=\"Submit\" />\r\n        </form>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default InputField;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.css';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\n\r\nimport trickListText from './data.js';\r\nimport Trick from './Trick';\r\nimport InputField from './InputField';\r\n\r\n\r\nclass TrickList extends React.Component {\r\n\r\n  render() {\r\n    //Create trick buttons and components\r\n    var arr = trickListText.split(\"\\n\");\r\n    var spins = [];\r\n    var stepovers = [];\r\n    var toes = [];\r\n    var flips = [];\r\n    var skilines = [];\r\n    var elements = [spins, stepovers, toes, flips, skilines];\r\n    // push the component to elements\r\n\r\n    var typeOfTrick = 0;\r\n    for (var i = 0; i < arr.length; i++) {\r\n      var trick = arr[i]; // String of trick with name and score\r\n\r\n      if (trick !== \"@\") {\r\n        //name of element\r\n        var name = trick.substring(0, trick.indexOf(\"-\") - 1);\r\n        trick = trick.substring(trick.indexOf(\"-\") + 2, trick.length); // Cut off info we already have\r\n        trick = trick.split(\" \");\r\n        elements[typeOfTrick].push(<Trick name={name} trickCode={trick[0]} score2Ski={trick[1]} score1Ski={trick[2]}\r\n          trickWakeCode={trick[3]} scoreWake2Ski={trick[4]} scoreWake1Ski={trick[5]}\r\n          onClick={(data, front, trick, reverse) => this.props.onClick(data, front, trick, reverse)} oneSki={this.props.oneSki} wake={this.props.wake} front={this.props.front} trick={i} lastTrick={this.props.lastTrick} />);\r\n      } else {\r\n        typeOfTrick += 1;\r\n      }\r\n    }\r\n    return (\r\n      <div>\r\n        <div className=\"trick-container row\">\r\n          <div className=\"d-flex flex-column\"><h3>Spins</h3>{spins}</div>\r\n          <div className=\"d-flex flex-column\"><h3>Stepovers</h3>{stepovers}</div>\r\n          <div className=\"d-flex flex-column\"><h3>Toes</h3>{toes}</div>\r\n          <div className=\"d-flex flex-column\"><h3>Flips</h3>{flips}</div>\r\n          <div className=\"d-flex flex-column\"><h3>Skilines</h3>{skilines}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Application extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      score: 0,\r\n      oneSki: true,\r\n      wake: false,\r\n      front: true,\r\n      tricks_done: [],\r\n      value: '',\r\n      tricks: this.setUp(),\r\n      message: \"You are riding on one ski. Enter tricks below or learn how to use this through the link in the footer\",\r\n      visual_trick_list: [],\r\n      start: true,\r\n    }\r\n  }\r\n\r\n  switchWake() {\r\n    this.setState({ wake: !this.state.wake })\r\n  }\r\n\r\n  //Reset score\r\n  reset() {\r\n    // Set what ski they are riding on (visualy)\r\n    var ski = this.state.oneSki ? \"one ski\" : \"two skis\";\r\n    this.setState({ score: 0, front: true, tricks_done: [], visual_trick_list: [], message: \"Trick run reset: You are riding on \" + ski + \"\\n\"}); // Reset Score   \r\n  }\r\n\r\n  switchSki() {\r\n\r\n    //Let the user know that their score will reset\r\n    confirmAlert({\r\n      title: 'What Type of Ski Would You Like to Use?',\r\n      message: 'Note: Score will reset when switching skis!',\r\n      buttons: [\r\n        {\r\n          label: 'One Ski',\r\n          onClick: () => this.setState({ oneSki: true })\r\n        },\r\n        {\r\n          label: 'Two Ski',\r\n          onClick: () => alert(\"Sorry can't do that just yet!\")\r\n        },\r\n        {\r\n          label: 'Wake Board',\r\n          onClick: () => alert(\"Sorry can't do that just yet!\")\r\n        },\r\n        {\r\n          label: 'Knee Board',\r\n          onClick: () => alert(\"Sorry can't do that just yet!\")\r\n        }\r\n      ]\r\n    });\r\n\r\n    this.reset();\r\n  }\r\n\r\n  // Finds trick info based off trick code\r\n  findTrick(trickCode) {\r\n\r\n    if(trickCode.charAt(0) === 'R') {\r\n      return null;\r\n    }\r\n\r\n    var tricks = this.state.tricks;\r\n    var trick = null; \r\n    var wake = false;\r\n    // Find the related trick\r\n    for (var i = 0; i < tricks.length; i++) {\r\n      for (var j = 0; j < tricks[i].length; j++) {\r\n        if (tricks[i][j].trickCode === trickCode) {\r\n          trick = tricks[i][j];\r\n          break;\r\n          } \r\n        else if (tricks[i][j].trickWakeCode === trickCode) {\r\n          wake = true;\r\n          trick = tricks[i][j];\r\n        }\r\n      }\r\n    }\r\n\r\n    if (trick === null) {\r\n      return null;\r\n    }\r\n\r\n   return [trick, wake];\r\n  }\r\n\r\n  //Called when enter is pressed in the input field\r\n  handleSubmit(trickCode) {\r\n    var wake = false;\r\n    var reverse = false;\r\n    var ski; // Based off what type of ski they are on\r\n    var tricks = this.state.tricks;\r\n    var trick = null;\r\n    var front = this.state.front;\r\n    var message = null;\r\n    var reverseTrick = null;\r\n    var reverseTrickCode = null;\r\n\r\n    this.setState({start: false});\r\n\r\n    // Check for OOC move\r\n    if(this.state.visual_trick_list.length === 0) {\r\n      if(trickCode === \"B OOC\") {\r\n        this.state.visual_trick_list.push([\"Out of Course Back\", \"B OOC\", 0]);\r\n        this.setState({front: false, message: null});\r\n        return;\r\n      } else if (trickCode === \"TB OOC\") {\r\n        this.state.visual_trick_list.push([\"Out of Course Toe Back\", \"TB OOC\", 0]);\r\n        this.setState({front: false, message: null});\r\n        return;\r\n      } else if (trickCode === \"LB OOC\") {\r\n        this.state.visual_trick_list.push([\"Out of Course Line Back\", \"LB OOC\", 0]);\r\n        this.setState({front: false, message: null});\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Check if reverse\r\n    if (trickCode.charAt(0) === 'R') {\r\n      reverse = true;\r\n\r\n      // See if the user typed R or R...\r\n      \r\n        if (trickCode.length > 1) {\r\n        \r\n\r\n        reverseTrickCode = trickCode.substring(1);\r\n        reverseTrick = this.findTrick(reverseTrickCode);\r\n\r\n        if(reverseTrick === null) {\r\n          this.setState({message: \"Trick not found\"});\r\n          return;\r\n        }\r\n\r\n        reverseTrick = reverseTrick[0];\r\n\r\n        trickCode = 'R';\r\n      }\r\n\r\n      \r\n        if(trickCode === 'R') {\r\n          var position = \"Nothing\";\r\n          // If it's just R than try pulling the other tricks\r\n\r\n          // Try doing the last trick\r\n          \r\n          // If we try reverse as first trick\r\n          if(this.state.tricks_done.length - 1 < 0) {\r\n            this.setState({message: \"No trick to do the reverse of\"});\r\n            return;\r\n          }\r\n          var lastTrickCode = this.state.tricks_done[this.state.tricks_done.length - 1];\r\n          \r\n          var lastTrick = this.findTrick(lastTrickCode);\r\n          if(lastTrick !== null) {\r\n            position = lastTrick[0].start; // Get what position you need to start in\r\n          }\r\n        \r\n          if((front === true && position === 'F') || (front === false && position === 'B')) {\r\n            // Set trick code to last trick\r\n            trickCode = lastTrickCode;\r\n          }\r\n          // If that does not work try doing the reverse of the 2nd to last trick trick\r\n          else {\r\n            if(this.state.tricks_done.length - 2 < 0) {alert(\"No trick to do the reverse of\")}\r\n\r\n          lastTrickCode = this.state.tricks_done[this.state.tricks_done.length - 2];\r\n          lastTrick = this.findTrick(lastTrickCode);\r\n          if(lastTrick !== null) {\r\n            position = lastTrick[0].start; // Get what position you need to start in\r\n          }\r\n          if((front === true && position === 'F') || (front === false && position === 'B')) {\r\n            // Set trick code to last trick\r\n            trickCode = lastTrickCode;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    var result = this.findTrick(trickCode);\r\n\r\n    //If R... was typed and there was no result\r\n\r\n    // If we did not find the trick\r\n    if (result === null) {\r\n      this.setState({message: \"Trick not found\"});\r\n      return;\r\n    }\r\n\r\n    if (reverseTrick !== null && result[0] !== reverseTrick) {\r\n      this.setState({message: \"Can not do reverse of that trick with current setup\"});\r\n      return;\r\n    }\r\n\r\n    trick = result[0];\r\n    wake = result[1];\r\n\r\n    if (reverse && !trick.score1Ski.includes('*') && !trick.score1Ski.includes('%')) {\r\n      this.setState({message: trick.name + \" is not reversable\"});\r\n      return;\r\n    } else if (reverse && !trick.scoreWake1Ski.includes('*') && !trick.scoreWake1Ski.includes('%')) {\r\n      this.setState({message: trick.name + \" is not reversable\"});\r\n      return;\r\n    } \r\n\r\n    // Check if we can legally do this trick ex: Trying to do a B while already back is imposible\r\n    var startPosition = trick.start === \"F\"; // Front === True\r\n    var endPosition =  trick.end === \"F\"; // Front === True\r\n\r\n    if(front !== startPosition) {\r\n      this.setState({message: \"Can't do that, facing wrong direction!\"});\r\n      return;\r\n    } \r\n    else\r\n      front = endPosition;\r\n\r\n\r\n\r\n    //Check if the trick has been done and check the amount to add to the score\r\n    const tricks_done = this.state.tricks_done;\r\n    var toAdd = 0; // Amount to add to score\r\n\r\n    if (reverse) {\r\n      trickCode = 'R' + trickCode;\r\n    }\r\n\r\n    if (tricks_done.includes(trickCode)) {\r\n      message = \"Trick already done! No points.\";\r\n    } else {\r\n      if (wake)\r\n        toAdd = trick.scoreWake1Ski;\r\n      else\r\n        toAdd = trick.score1Ski;\r\n    }\r\n\r\n    // Set scores and states\r\n    var visual_list = this.state.visual_trick_list;\r\n    var name = (reverse) ? 'Reverse ' + trick.name : trick.name; \r\n    visual_list.push([name, trickCode, toAdd]);\r\n    tricks_done.push(trickCode);\r\n    this.score(toAdd);\r\n    this.setState({ tricks_done: tricks_done, front: front, message: message, });\r\n  }\r\n\r\n  //Add to score\r\n  score(amount) {\r\n    this.setState({ score: parseInt(this.state.score, 10) + parseInt(amount, 10) });\r\n  }\r\n\r\n  setUp() {\r\n    //Create trick buttons and components\r\n    var arr = trickListText.split(\"\\n\");\r\n    var spins = [];\r\n    var stepovers = [];\r\n    var toes = [];\r\n    var flips = [];\r\n    var skilines = [];\r\n    var elements = [spins, stepovers, toes, flips, skilines];\r\n\r\n    // push the component to elements\r\n    var typeOfTrick = 0;\r\n    for (var i = 0; i < arr.length; i++) {\r\n      var trick = arr[i]; // String of trick with name and score\r\n\r\n      if (trick !== \"@\") {\r\n        //name of element\r\n        var name = trick.substring(0, trick.indexOf(\"-\") - 1);\r\n        trick = trick.substring(trick.indexOf(\"-\") + 2, trick.length); // Cut off info we already have\r\n        trick = trick.split(\" \");\r\n\r\n        var obj = {\r\n          name: name,\r\n          trickCode: trick[0],\r\n          score2Ski: trick[1],\r\n          score1Ski: trick[2],\r\n          trickWakeCode: trick[3],\r\n          scoreWake2Ski: trick[4],\r\n          scoreWake1Ski: trick[5],\r\n          trick: i,\r\n          start: trick[6],\r\n          end: trick[7],\r\n        }\r\n        elements[typeOfTrick].push(obj);\r\n        /*\r\n        elements[typeOfTrick].push(<Trick name={ name } trickCode={trick[0]} score2Ski={trick[1]} score1Ski={trick[2]}\r\n        trickWakeCode={trick[3]} scoreWake2Ski={trick[4]} scoreWake1Ski={trick[5]} \r\n        onClick={(data, front, trick, reverse) => this.props.onClick(data, front, trick, reverse)} oneSki={this.props.oneSki} wake={this.props.wake} front={this.props.front} trick={i} lastTrick={this.props.lastTrick}/>);*/\r\n      } else {\r\n        typeOfTrick += 1;\r\n      }\r\n    }\r\n    return elements;\r\n  }\r\n\r\n\r\n  scrollToBottom = () => {\r\n    this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.scrollToBottom();\r\n  }\r\n  \r\n  componentDidUpdate() {\r\n    this.scrollToBottom();\r\n  }\r\n  \r\n\r\n  render() {\r\n    const score = this.state.score;\r\n    const message = this.state.message;\r\n    var thing = message == null ? false : message.includes(\"Trick run reset\");\r\n    const start = this.state.start;\r\n    \r\n\r\n    // <img src={require('./trickski.jpg')} height=\"150px\" width=\"150px\" alt=\"dwq\"/> to add photo\r\n    // Wake button:           <button onClick={() => this.switchWake()}>{this.state.wake ? \"Surface\" : \"Wake\"}</button>\r\n\r\n    return (\r\n      <body>\r\n      <div className=\"application\">\r\n        <div className=\"text-center\">\r\n        <h1 className=\"text-center display-4\">Trick Calculator</h1>\r\n        <div className=\"text-center display-4\">{score}</div>\r\n        <div className=\"text-center\">\r\n        </div>\r\n        <br/>\r\n        <div class=\"justify-content-center\"><p class=\"sizing-message \">{message}</p>{thing || start ? <button onClick={() => this.switchSki()}>Switch Ski</button>: null}</div>\r\n        <div>{thing || start ? <br /> : null}</div>\r\n        <InputField\r\n          onSubmit={(trickCode) => this.handleSubmit(trickCode)}\r\n        />\r\n\r\n          <div>Current Position: <strong>{this.state.front ? \"Front\" : \"Back\"}</strong></div>\r\n          <br />\r\n          \r\n          <div class=\"row d-flex justify-content-center table-responsive\">\r\n          <table id=\"trick-table\" class=\"table w-75\">\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Code</th>\r\n              <th>Points</th>\r\n            </tr>\r\n          {this.state.visual_trick_list.map(txt => <tr><td>{txt[0]}</td><td>{txt[1]}</td><td>{txt[2]}</td></tr>)}\r\n          <div style={{ float:\"left\", clear: \"both\" }}\r\n             ref={(el) => { this.messagesEnd = el; }}>\r\n          </div>\r\n          </table>\r\n          </div>\r\n\r\n          <div>\r\n              {thing || start ? null : <button onClick={() => this.reset()}>Reset</button>}\r\n          </div>\r\n          <br />\r\n\r\n          </div>\r\n          </div>\r\n\r\n          <footer id=\"sticky-footer\" class=\"py-4 bg-dark text-white-50\">\r\n            <div class=\"container text-center\">\r\n              <small><p><a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://github.com/reid-miller/Collegiate-Trick-Score-Calculator/blob/master/src/Trick-Scores.pdf\">Trick List</a> | <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://github.com/reid-miller/Collegiate-Trick-Score-Calculator/blob/master/README.md\">How to Use</a> | <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"http://www.usawaterski.org/\">USA Water Ski</a></p></small>\r\n              <small>Made by <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"http://reidhub.com\">Reid Miler</a></small>\r\n            </div>\r\n          </footer>\r\n      </body>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n/*\r\n\r\n<div>\r\n          <TrickList \r\n          onClick={(score, front, trick, reverse) => this.handleClick(score, front, trick, reverse)}\r\n          spins={this.state.spins}\r\n          stepovers={this.state.stepovers}\r\n          toes={this.state.toes}\r\n          flips={this.state.flips}\r\n          skilines={this.state.skilines}\r\n          oneSki={this.state.oneSki}\r\n          wake={this.state.wake}\r\n          front={this.state.front}\r\n          lastTrick={this.state.lastTrick}\r\n          />\r\n        </div>\r\n\r\n                  <img src={image} class=\"img-fluid\" alt=\"Forward facing trick skier\" height=\"20%\" width=\"20%\"/>\r\n\r\n\r\n*/\r\n\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Application />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}