{"version":3,"sources":["data.js","Trick.js","InputField.js","index.js"],"names":["trickList","Trick","score","name","this","props","greyOut","front","trick","reverse","lastTrick","includes","trickCode","wake","oneSki","scoreWake1Ski","scoreWake2Ski","score1Ski","score2Ski","disabled","onClick","React","Component","InputField","state","value","handleChange","bind","handleSubmit","event","setState","target","onSubmit","toUpperCase","trim","preventDefault","type","onChange","Application","tricks_done","tricks","setUp","message","visual_trick_list","confirmAlert","title","buttons","label","alert","reset","i","length","j","trickWakeCode","charAt","positon","console","log","result","findTrick","postion","startPosition","endPosition","toAdd","visual_list","push","amount","parseInt","arr","trickListText","split","elements","typeOfTrick","obj","substring","indexOf","className","switchSki","class","id","map","txt","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2e0758fa.chunk.js","sourcesContent":["const trickList= \"Sideslide - S 20* 40* % % %\\nToehold Sideslide - TS % 130* % % %\\n180° FB - B 30* 60* WB 50* 80*\\n180° BF - F 30* 60* WF 50* 80*\\n360° FF - O 40* 90* WO 110* 150*\\n360° BB - BB 40* 90* WBB 110* 150*\\n540° FB - 5B 50 110 W5B 310* 310*\\n540° BF - 5F 50 110 W5F 310* 310*\\n720° FF - 7F 60 130 W7F 800* 800*\\n720° BB - 7B 60 130 W7B 480* 480*\\n900° FB - % % % W9B 850* 850*\\n900° BF - % % % W9F 850* 850*\\n@\\nStepover 180° FB - LB 70* 110 WLB 110* 160\\nStepover 180° BF - LF 70* 110 WLF 110* 160\\nStepover 360° FF - % % % WLO 200* 260*\\nStepover 360° BB - % % % WLBB 200* 260*\\nStepover 540° FB - % % % WL5B 300* 420*\\nDouble Stepover 540° FB - % % % WL5LB % 500*\\nStepover 720° FF - % % % WL7F 700* 700*\\nStepover 900° FB - % % % WL9B 800* 800*\\nStepover 540° BF - % % % WL5F 300* 420*\\nDouble Stepover 540° BF - % % % WL5LF % 500*\\nStepover 720° BB - % % % WL7B 550* 550*\\nStepover 900° BF - % % % WL9F 800* 800*\\n@\\nToehold 180° FB - TB % 100* TWB % 150*\\nToehold 180° BF - TF % 100* TWF % 150*\\nToehold 360° FF - TO % 200* TWO % 300*\\nToehold 360° BB - TBB % 200* TWBB % 330*\\nToehold 540° FB - T5B % 350* TW5B % 500*\\nToehold 720° FF - T7F % 450 TW7F % 650*\\nToehold 540° BF - T5F % 350 TW5F % 500\\nToehold 720° BB - % % % TW7B % 650\\nToehold Stepover 180° FB - % % % TWLB % 320\\nToehold Stepover 180° BF - % % % TWLF % 380\\nToehold Stepover 360° FF - % % % TWLO % 480*\\nToehold Stepover 360° BB - % % % TWLBB % 480*\\nToehold Stepover 540° FB - % % % TWL5B % 600*\\nToehold Stepover 540° LBF - % % % TWL5F % 700\\n@\\nSomersault Forward - % % % FFL 800 800\\nSomersault Backward - % % % BFL 500* 500*\\nWake Double Flip - % % % BDFL 1,000 1,000\\nWake Flip Back Full Twist FF - % % % BFLO 800 800*\\nWake Flip Back Full Twist BB - % % % BFLBB 800 800*\\nWake Flip Back Half Twist FB - % % % BFLB 750* 750*\\nWake Flip Back Line Back - % % % BFLLB 800 800\\nWake Flip Half Twist Front - % % % BFLF 550 550*\\nWake Flip 540° BF - % % % BFL5F 850 850*\\nWake Flip 540° FB - % % % BFL5B 900 900*\\nSomersault Forward with 180 Back - % % % FFLB 850 850\\n@\\nSki Line 180° FB - % % % SLB % 350*\\nSki Line 180° BF - % % % SLF % 400*\\nSki Line 360° FF - % % % SLO % 400*\\nSki Line 360° BB - % % % SLBB % 450*\\nSki Line 540° FB - % % % SL5B % 550*\\nSki Line 540° BF - % % % SL5F % 550*\\nSki Line 720° BB - % % % SL7B % 750*\\nSki Line 720° FF - % % % SL7F % 800*\";\r\n\r\nexport default trickList;\r\n\r\n\r\n\r\n ","import React from 'react';\r\n\r\nclass Trick extends React.Component {\r\n  render() {\r\n      var name = this.props.name;\r\n      var greyOut = false;\r\n      var score;\r\n      var front = this.props.front; //Will be sent back up as vakue it should be after button is pressed\r\n      var trick = this.props.trick;\r\n      var reverse = false;\r\n\r\n      if(this.props.lastTrick === trick) {\r\n        name = \"Reverse \" + name;\r\n        reverse = true;\r\n      }\r\n\r\n      if(name.includes(\"FF\") && !front) {\r\n        if(!front) {\r\n          greyOut = true;\r\n        }\r\n      } else if(name.includes(\"FB\")){\r\n        if(front) {\r\n          front = false;\r\n        } else {\r\n          greyOut = true;\r\n        }\r\n      } else if(name.includes(\"BF\")) {\r\n        if(front) {\r\n          greyOut = true;\r\n        } else {\r\n          front = true;\r\n        }\r\n      } else if(name.includes(\"BB\")) {\r\n        if(front) {\r\n          greyOut = true;\r\n        }\r\n      }\r\n\r\n      //If the trick does not need wake added to it ever then we do nothing\r\n      if(this.props.trickCode === \"%\" || this.props.trickCode === \"S\" || this.props.trickCode === \"TS\") {\r\n        // We do nothing\r\n      } \r\n      // Else it might need \"wake\" added to the name\r\n      else {\r\n        name = this.props.wake ? \"Wake \" + name : name; \r\n      }\r\n\r\n      if(this.props.wake) {\r\n        score = this.props.oneSki ? this.props.scoreWake1Ski : this.props.scoreWake2Ski;\r\n      } else {\r\n        score = this.props.oneSki ? this.props.score1Ski : this.props.score2Ski;\r\n      }\r\n\r\n      if(greyOut) {\r\n        return (\r\n          <button disabled> {name} </button>\r\n        );\r\n      } else {\r\n        return (\r\n          <button onClick={() => {this.props.onClick(score, front, trick, reverse)}}> {name} </button>\r\n        );\r\n      }\r\n    }\r\n}\r\n\r\nexport default Trick;","import React from 'react';\r\n\r\nclass InputField extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {value: ''};\r\n  \r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n  \r\n    handleChange(event) {\r\n      this.setState({value: event.target.value});\r\n    }\r\n  \r\n    handleSubmit(event) {\r\n      this.props.onSubmit(this.state.value.toUpperCase().trim());\r\n\r\n\r\n      event.preventDefault();\r\n      this.setState({value: \"\",})\r\n      //var scrollableTable = document.getElementById(\"trick-table\");\r\n      //scrollableTable.scrollTop = scrollableTable.scrollHeight;\r\n      //console.log(scrollableTable);\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label>\r\n            <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\r\n          </label>\r\n          <input type=\"submit\" value=\"Submit\" />\r\n        </form>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default InputField;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.css';\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\n\r\nimport trickListText from './data.js';\r\nimport Trick from './Trick';\r\nimport InputField from './InputField';\r\n\r\n\r\nclass TrickList extends React.Component {\r\n\r\n  render() {\r\n    //Create trick buttons and components\r\n    var arr = trickListText.split(\"\\n\");\r\n    var spins = [];\r\n    var stepovers = [];\r\n    var toes = [];\r\n    var flips = [];\r\n    var skilines = [];\r\n    var elements = [spins, stepovers, toes, flips, skilines];\r\n    // push the component to elements\r\n\r\n    var typeOfTrick = 0;\r\n    for (var i = 0; i < arr.length; i++) {\r\n      var trick = arr[i]; // String of trick with name and score\r\n\r\n      if (trick !== \"@\") {\r\n        //name of element\r\n        var name = trick.substring(0, trick.indexOf(\"-\") - 1);\r\n        trick = trick.substring(trick.indexOf(\"-\") + 2, trick.length); // Cut off info we already have\r\n        trick = trick.split(\" \");\r\n        elements[typeOfTrick].push(<Trick name={name} trickCode={trick[0]} score2Ski={trick[1]} score1Ski={trick[2]}\r\n          trickWakeCode={trick[3]} scoreWake2Ski={trick[4]} scoreWake1Ski={trick[5]}\r\n          onClick={(data, front, trick, reverse) => this.props.onClick(data, front, trick, reverse)} oneSki={this.props.oneSki} wake={this.props.wake} front={this.props.front} trick={i} lastTrick={this.props.lastTrick} />);\r\n      } else {\r\n        typeOfTrick += 1;\r\n      }\r\n    }\r\n    console.log(elements);\r\n    return (\r\n      <div>\r\n        <div className=\"trick-container row\">\r\n          <div className=\"d-flex flex-column\"><h3>Spins</h3>{spins}</div>\r\n          <div className=\"d-flex flex-column\"><h3>Stepovers</h3>{stepovers}</div>\r\n          <div className=\"d-flex flex-column\"><h3>Toes</h3>{toes}</div>\r\n          <div className=\"d-flex flex-column\"><h3>Flips</h3>{flips}</div>\r\n          <div className=\"d-flex flex-column\"><h3>Skilines</h3>{skilines}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Application extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      score: 0,\r\n      oneSki: true,\r\n      wake: false,\r\n      front: true,\r\n      tricks_done: [],\r\n      value: '',\r\n      tricks: this.setUp(),\r\n      message: \"\",\r\n      visual_trick_list: [],\r\n    }\r\n  }\r\n\r\n  switchWake() {\r\n    this.setState({ wake: !this.state.wake })\r\n  }\r\n\r\n  switchSki() {\r\n\r\n    //Let the user know that their score will reset\r\n    confirmAlert({\r\n      title: 'What Type of Ski Would You Like to Use?',\r\n      message: 'Note: Score will reset when switching skis!',\r\n      buttons: [\r\n        {\r\n          label: 'One Ski',\r\n          onClick: () => this.setState({ oneSki: true })\r\n        },\r\n        {\r\n          label: 'Two Ski',\r\n          onClick: () => alert(\"Sorry can't do that just yet!\")\r\n        },\r\n        {\r\n          label: 'Wake Board',\r\n          onClick: () => alert(\"Sorry can't do that just yet!\")\r\n        },\r\n        {\r\n          label: 'Knee Board',\r\n          onClick: () => alert(\"Sorry can't do that just yet!\")\r\n        }\r\n      ]\r\n    });\r\n\r\n    this.reset();\r\n  }\r\n  //Reset score\r\n  reset() {\r\n    this.setState({ score: 0, front: true, tricks_done: [], }); // Reset Score   \r\n  }\r\n\r\n  // Determines what direction you need to be to start a trick and what direction\r\n  // you'll be after the trick. Returns start postion followed by end ex: FF, FB, BF, BB\r\n  positon(trickCode) {\r\n\r\n    // Tricks you must be front for\r\n    if (!trickCode.includes(\"BB\") && (trickCode.includes(\"S\") || trickCode.includes(\"B\") || trickCode.includes(\"FB\") || trickCode.includes(\"FF\") || trickCode.includes(\"O\"))) {\r\n\r\n      if (trickCode.includes(\"O\") || trickCode.includes(\"FF\") || trickCode.includes(\"S\"))\r\n        return \"FF\";\r\n      else\r\n        return \"FB\"\r\n\r\n    }\r\n    // Tricks you must be back for\r\n    else {\r\n      if (trickCode.includes(\"BB\"))\r\n        return \"BB\";\r\n      else\r\n        return \"BF\";\r\n    }\r\n  }\r\n\r\n  // Finds trick info based off trick code\r\n  findTrick(trickCode) {\r\n    var tricks = this.state.tricks;\r\n    var trick = null; \r\n    var wake = false;\r\n    // Find the related trick\r\n    for (var i = 0; i < tricks.length; i++) {\r\n      for (var j = 0; j < tricks[i].length; j++) {\r\n        if (tricks[i][j].trickCode === trickCode) {\r\n          trick = tricks[i][j];\r\n          break;\r\n          } \r\n        else if (tricks[i][j].trickWakeCode === trickCode) {\r\n          wake = true;\r\n          trick = tricks[i][j];\r\n        }\r\n      }\r\n    }\r\n\r\n   return [trick, wake];\r\n  }\r\n\r\n  //Called when enter is pressed in the input field\r\n  handleSubmit(trickCode) {\r\n\r\n    var wake = false;\r\n    var reverse = false;\r\n    var ski; // Based off what type of ski they are on\r\n    var tricks = this.state.tricks;\r\n    var trick = null;\r\n    var front = this.state.front;\r\n    var message = \"\";\r\n\r\n    // Check if reverse\r\n    if (trickCode.charAt(0) === 'R') {\r\n      reverse = true;\r\n        if(trickCode === 'R') {\r\n          // If it's just R than try pulling the other tricks\r\n\r\n          // Try doing the last trick\r\n          if(this.state.tricks_done.length - 1 < 0) {alert(\"This needs to be fixed\")}\r\n          var lastTrick = this.state.tricks_done[this.state.tricks_done.length - 1];\r\n          if((front === true && this.positon(lastTrick).charAt(0) === 'F') || (front === false && this.positon(lastTrick).charAt(0) === 'B')) {\r\n            // Set trick code to last trick\r\n            trickCode = lastTrick;\r\n            console.log(\"This is last trick: \" + trickCode)\r\n\r\n          }\r\n          // If that does not work try doing the reverse of the 2nd to last trick trick\r\n          else {\r\n          if(this.state.tricks_done.length - 2 < 0) {alert(\"This needs to be fixed\")}\r\n          lastTrick = this.state.tricks_done[this.state.tricks_done.length - 2];\r\n          if((front === true && this.positon(lastTrick).charAt(0) === 'F') || (front === false && this.positon(lastTrick).charAt(0) === 'B')) {\r\n            // Set trick code to last trick\r\n            trickCode = lastTrick;\r\n            console.log(\"This is last trick: \" + trickCode)\r\n\r\n          }\r\n        }\r\n      }\r\n        //trickCode = trickCode.substring(1);\r\n    }\r\n\r\n    console.log(trickCode);\r\n    var result = this.findTrick(trickCode);\r\n    trick = result[0];\r\n    wake = result[1];\r\n\r\n    // If we did not find the trick\r\n    if (trick === null) {\r\n      this.setState({message: \"Trick not found\"});\r\n      return;\r\n    }\r\n\r\n    // Check if we can legally do this trick ex: Trying to do a B while already back is imposible\r\n    var postion = this.positon(trickCode);\r\n    var startPosition = postion.charAt(0) === \"F\"; // Front === True\r\n    var endPosition =  postion.charAt(1) === \"F\"; // Front === True\r\n\r\n    if(front !== startPosition) {\r\n      this.setState({message: \"Can't do that, facing wrong direction!\"});\r\n      return;\r\n    } \r\n    else\r\n      front = endPosition;\r\n\r\n\r\n\r\n    //Check if the trick has been done and check the amount to add to the score\r\n    const tricks_done = this.state.tricks_done;\r\n    var toAdd = 0; // Amount to add to score\r\n\r\n    if (reverse) {\r\n      trickCode = 'R' + trickCode;\r\n    }\r\n\r\n    if (tricks_done.includes(trickCode)) {\r\n      message = \"Trick already done! No points.\";\r\n    } else {\r\n      if (wake)\r\n        toAdd = trick.scoreWake1Ski;\r\n      else\r\n        toAdd = trick.score1Ski;\r\n    }\r\n\r\n\r\n    // Set scores and states\r\n    var visual_list = this.state.visual_trick_list;\r\n    var name = (reverse) ? 'Reverse ' + trick.name : trick.name; \r\n    visual_list.push([name, trickCode, toAdd]);\r\n    tricks_done.push(trickCode);\r\n    this.score(toAdd);\r\n    this.setState({ tricks_done: tricks_done, front: front, message: message, });\r\n  }\r\n\r\n  //Add to score\r\n  score(amount) {\r\n    this.setState({ score: parseInt(this.state.score, 10) + parseInt(amount, 10) });\r\n  }\r\n\r\n  setUp() {\r\n    //Create trick buttons and components\r\n    var arr = trickListText.split(\"\\n\");\r\n    var spins = [];\r\n    var stepovers = [];\r\n    var toes = [];\r\n    var flips = [];\r\n    var skilines = [];\r\n    var elements = [spins, stepovers, toes, flips, skilines];\r\n\r\n    // push the component to elements\r\n    var typeOfTrick = 0;\r\n    for (var i = 0; i < arr.length; i++) {\r\n      var trick = arr[i]; // String of trick with name and score\r\n\r\n      if (trick !== \"@\") {\r\n        //name of element\r\n        var name = trick.substring(0, trick.indexOf(\"-\") - 1);\r\n        trick = trick.substring(trick.indexOf(\"-\") + 2, trick.length); // Cut off info we already have\r\n        trick = trick.split(\" \");\r\n\r\n        var obj = {\r\n          name: name,\r\n          trickCode: trick[0],\r\n          score2Ski: trick[1],\r\n          score1Ski: trick[2],\r\n          trickWakeCode: trick[3],\r\n          scoreWake2Ski: trick[4],\r\n          scoreWake1Ski: trick[5],\r\n          trick: i,\r\n        }\r\n        elements[typeOfTrick].push(obj);\r\n        /*\r\n        elements[typeOfTrick].push(<Trick name={ name } trickCode={trick[0]} score2Ski={trick[1]} score1Ski={trick[2]}\r\n        trickWakeCode={trick[3]} scoreWake2Ski={trick[4]} scoreWake1Ski={trick[5]} \r\n        onClick={(data, front, trick, reverse) => this.props.onClick(data, front, trick, reverse)} oneSki={this.props.oneSki} wake={this.props.wake} front={this.props.front} trick={i} lastTrick={this.props.lastTrick}/>);*/\r\n      } else {\r\n        typeOfTrick += 1;\r\n      }\r\n    }\r\n    return elements;\r\n  }\r\n\r\n  render() {\r\n    const score = this.state.score;\r\n    const message = this.state.message;\r\n    console.log(message);\r\n    // <img src={require('./trickski.jpg')} height=\"150px\" width=\"150px\" alt=\"dwq\"/> to add photo\r\n    // Wake button:           <button onClick={() => this.switchWake()}>{this.state.wake ? \"Surface\" : \"Wake\"}</button>\r\n\r\n    return (\r\n      <div className=\"application\">\r\n        <div className=\"text-center\">\r\n        <h1 className=\"text-center\">Trick Calculator</h1>\r\n        <div className=\"text-center\">{score}</div>\r\n        <div className=\"text-center\">\r\n          <button onClick={() => this.reset()}>Reset</button>\r\n          <div>You are on {this.state.oneSki ? \"one ski\" : \"two skis\"}</div>\r\n          <button onClick={() => this.switchSki()}>Switch Ski</button>\r\n        </div>\r\n        <br/>\r\n        <p>{message}</p>\r\n        <InputField\r\n          onSubmit={(trickCode) => this.handleSubmit(trickCode)}\r\n        />\r\n\r\n          <div>Current Position: <strong>{this.state.front ? \"Front\" : \"Back\"}</strong></div>\r\n          \r\n          <div class=\"row d-flex justify-content-center table-responsive\">\r\n          <table id=\"trick-table\" class=\"table w-75\">\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Code</th>\r\n              <th>Points</th>\r\n            </tr>\r\n          {this.state.visual_trick_list.map(txt => <tr><td>{txt[0]}</td><td>{txt[1]}</td><td>{txt[2]}</td></tr>)}\r\n          </table>\r\n          </div>\r\n          </div>\r\n\r\n      \r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n/*\r\n\r\n<div>\r\n          <TrickList \r\n          onClick={(score, front, trick, reverse) => this.handleClick(score, front, trick, reverse)}\r\n          spins={this.state.spins}\r\n          stepovers={this.state.stepovers}\r\n          toes={this.state.toes}\r\n          flips={this.state.flips}\r\n          skilines={this.state.skilines}\r\n          oneSki={this.state.oneSki}\r\n          wake={this.state.wake}\r\n          front={this.state.front}\r\n          lastTrick={this.state.lastTrick}\r\n          />\r\n        </div>\r\n\r\n                  <img src={image} class=\"img-fluid\" alt=\"Forward facing trick skier\" height=\"20%\" width=\"20%\"/>\r\n\r\n\r\n*/\r\n\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Application />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}